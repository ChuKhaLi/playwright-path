# This workflow demonstrates a multi-stage continuous testing pipeline.
name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # =================================================================
  # Job 1: Fast static checks. Fails the pipeline immediately if the
  # code doesn't meet quality standards.
  # =================================================================
  lint:
    name: "Static Analysis: Lint"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: "Setup Node.js"
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: "Install dependencies"
        run: npm ci

      - name: "Run linter"
        run: npm run lint # Assumes a "lint" script in package.json

  # =================================================================
  # Job 2: Run fast API tests. These don't need a UI.
  # =================================================================
  api-tests:
    name: "Fast Tests: API"
    needs: lint # This job won't start until 'lint' succeeds
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3
      - name: "Setup Node.js"
        uses: actions/setup-node@v3
      - name: "Install dependencies"
        run: npm ci
      - name: "Install Playwright browsers"
        run: npx playwright install --with-deps
      - name: "Run API tests"
        run: npx playwright test --grep @api

  # =================================================================
  # Job 3: Run E2E smoke tests on all pull requests.
  # This provides a quick confidence check before merging.
  # =================================================================
  e2e-smoke:
    name: "E2E Smoke Tests"
    if: github.event_name == 'pull_request'
    needs: api-tests
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3
      - name: "Setup Node.js"
        uses: actions/setup-node@v3
      - name: "Install dependencies"
        run: npm ci
      - name: "Install Playwright browsers"
        run: npx playwright install --with-deps
      - name: "Run E2E smoke tests"
        run: npx playwright test --grep @smoke

  # =================================================================
  # Job 4: Run the full E2E regression suite.
  # This only runs after a merge to main, to protect the main branch.
  # It uses sharding to speed up execution.
  # =================================================================
  e2e-regression:
    name: "E2E Regression (Shard ${{ matrix.shard }}/${{ strategy.job-total }})"
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: api-tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shard: [1, 2, 3, 4] # Run this job 4 times in parallel
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3
      - name: "Setup Node.js"
        uses: actions/setup-node@v3
      - name: "Install dependencies"
        run: npm ci
      - name: "Install Playwright browsers"
        run: npx playwright install --with-deps
      - name: "Run E2E regression tests shard"
        run: npx playwright test --grep @regression --shard=${{ matrix.shard }}/${{ strategy.job-total }}

      - name: "Upload report artifact"
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report-shard-${{ matrix.shard }}
          path: playwright-report/
          retention-days: 7